@model WebMyWorldEC.Models.Response.DataEntertainment_Centers

@{
    ViewBag.Title = "Create Mall";
}

<h2 class="text-center">@ViewBag.Title</h2>

@using (Html.BeginForm())
{
    if (Request.IsAuthenticated)
    {
        @Html.AntiForgeryToken()

        <div class="form-group">
            <div>
                <input class="btn btn-default" value="Back to List" type="submit" onclick="location.href='@Url.Action("Index", "Entertainment_Centers")';return false;" />
            </div>
        </div>
        <hr />

        <div class="form-horizontal col-md-offset-3">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Owner, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Owner, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Owner, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group ">
                @Html.LabelFor(model => model.IsParking, "Parking", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" style="padding-left: 35px;">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsParking)
                        @Html.ValidationMessageFor(model => model.IsParking, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="text-center col-md-8">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    else
    {
        Response.Redirect(Url.Action("Login", "Account"));
    }
}

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
